package stacks;
import java.util.*;
public class queueUsingStack {
	static class Queue{
	static Stack<Integer> s1=new Stack<>();
	static Stack<Integer> s2=new Stack<>();
	void enqueue(int x) {
		//check if stack1 is not empty pop all elements and push them into stack2
		while(!s1.isEmpty()) {
			s2.push(s1.pop());
		}
				
		//add the element
		s1.push(x);
				
		//if stack2 is not empty pop all elements back into stack1
		while(!s2.isEmpty()) {
			s1.push(s2.pop());
		}
	}
	
	int dequeue() {
		//you cannot pop if stack is empty so check for that condition
		if (s1.isEmpty()) {
			System.out.println("stack underflow");
			System.exit(0);
		}
		int x=s1.peek();
		s1.pop();
		return x;
	}
};

	public static void main(String[] args) {
		Queue q=new Queue();
		q.enqueue(1);
		q.enqueue(2);
		q.enqueue(3);
		
		System.out.println(q.dequeue());
		System.out.println(q.dequeue());
		System.out.println(q.dequeue());
		
	}

}
